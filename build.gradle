plugins {
	alias libs.plugins.nil.gradle
}

// NilLoader itself is compiled for Java 8 for compatibility with older versions.
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = 'io.github.betterthanupdates'
archivesBaseName = 'BabricNil'
version = '1.0.0'

repositories {
	maven {
		name 'Unascribed'
		url 'https://repo.sleeping.town'
		description 'NilLoader and NilGradle'
		content {
			includeGroup 'com.unascribed'
		}
	}
	maven {
		name 'Fabric'
		description 'Fabric dependencies'
		url 'https://maven.fabricmc.net'
	}
	maven {
		name 'Babric'
		description 'Intermediaries'
		url 'https://maven.glass-launcher.net/babric'
	}
}

nil {
	id "babricnil"
	standalone false // Set this to false for a smaller JAR that can't be run as a standalone Java agent
}

dependencies {
	loader libs.nil.loader

	// Any version available in the vanilla launcher can be put here, or...
	// ...you can use any version that's been archived in the IA by OmniArchive
	game nil.minecraftArchive('beta', 'b1.7.3')
	// Or, you can use something that isn't Minecraft with a normal Gradle dependency.

	// You can specify additional dependencies using the "mod" configuration to add things that will be remapped:

	// Normal libraries can be added with the usual "implementation" configuration.	implementation libs.fabric.loader
	implementation libs.fabric.loader
	implementation libs.tiny.parser
	implementation libs.tiny.remapper

}

mappings {
	// You can use any mappings in SRG, Proguard, or Tiny format here.
	// If your mappings use some form of intermediate, you'll need to specify it as a "via" mapping.
	 work 'babric:barn:b1.7.3+build.8:v2'
	 via 'babric:intermediary:b1.7.3:v2'
}
